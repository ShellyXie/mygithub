//为仓库指定用户名和邮箱
qiuying@qiuying-5520 MINGW64 /c/mygithub
$ git config --global user.name "ShellyXie"

qiuying@qiuying-5520 MINGW64 /c/mygithub
$ git config --global user.email "xqy_0077@163.com"


//将当前目录变成git仓库
qiuying@qiuying-5520 MINGW64 /c/mygithub
$ git init


//添加文件到暂存区
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git add git使用教程.txt


//提交文件到仓库
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git commit -m "git使用教程.txt提交"
[master (root-commit) 03c5346] git使用教程.txt提交
 1 file changed, 10 insertions(+)
 create mode 100644 "git\344\275\277\347\224\250\346\225\231\347\250\213.txt"

 
//查看文件状态，是否修改或提交
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   "git\344\275\277\347\224\250\346\225\231\347\250\213.txt"

no changes added to commit (use "git add" and/or "git commit -a")


//查看文件修改内容，退出ctrl+c
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git diff git使用教程.txt
diff --git "a/git\344\275\277\347\224\250\346\225\231\347\250\213.txt" "b/git\344\275\277\347\224\250\346\225\231\347\250\213.txt"
index f84ed4c..906f88a 100644
--- "a/git\344\275\277\347\224\250\346\225\231\347\250\213.txt"
+++ "b/git\344\275\277\347\224\250\346\225\231\347\250\213.txt"
@@ -7,4 +7,24 @@ $ git config --global user.email "xqy_0077@163.com"
 //将当前目录变成git仓库
 qiuying@qiuying-5520 MINGW64 /c/mygithub
 $ git init
-Initialized empty Git repository in C:/mygithub/.git/
+//添加文件到暂存区
+qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
+$ git add git使用教程.txt
+//提交文件到仓库
+qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
+$ git commit -m "git使用教程.txt提交"
+[master (root-commit) 03c5346] git使用教程.txt提交
+ 1 file changed, 10 insertions(+)
+ create mode 100644 "git\344\275\277\347\224\250\346\225\231\347\250\213.txt"
+
+//查看文件状态，是否修改或提交
+qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
+$ git status
:


//查看文件日志，显示每次commit
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git log
commit 9ff6f4c8470af1650fce228ad1328375e46487b1
Author: ShellyXie <xqy_0077@163.com>
Date:   Thu Jul 27 10:25:28 2017 +0800

    git使用教程.txt修改

commit 03c53468f441967c065c3120a003ffc73afed9dd
Author: ShellyXie <xqy_0077@163.com>
Date:   Thu Jul 27 10:07:07 2017 +0800

    git使用教程.txt提交
//日志一行显示
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git log --pretty=oneline
9ff6f4c8470af1650fce228ad1328375e46487b1 git使用教程.txt修改
03c53468f441967c065c3120a003ffc73afed9dd git使用教程.txt提交

	
	
//回退上一次提交，一次^两次^^多次HEAD~num
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git reset --hard HEAD^
HEAD is now at 03c5346 git使用教程.txt提交


//cat 显示文件内容
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ cat git使用教程.txt


//撤销回退，首先通过reflog获取版本号
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git reflog
03c5346 HEAD@{0}: reset: moving to HEAD^
9ff6f4c HEAD@{1}: commit: git使用教程.txt修改
03c5346 HEAD@{2}: commit (initial): git使用教程.txt提交
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git reset --hard 9ff6f4c
HEAD is now at 9ff6f4c git使用教程.txt修改


//丢弃工作区修改，两种状态
//1.readme.txt自动修改后，还没有放到暂存区（未 git add），使用 撤销修改就回到和版本库一模一样的状态。
//2.另外一种是readme.txt已经放入暂存区（git add）了，接着又作了修改，撤销修改就回到添加暂存区后的状态（git add后的状态）。
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git checkout -- git使用教程.txt

//删除文件
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ ls
b.txt  git使用教程.txt
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ rm b.txt
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ git commit -m "删除b.txt"
On branch master
Changes not staged for commit:
        modified:   "git\344\275\277\347\224\250\346\225\231\347\250\213.txt"

no changes added to commit
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ ls
git使用教程.txt


//关联远程仓库
//产生SSH key,并将公共密钥粘贴到github
qiuying@qiuying-5520 MINGW64 /c/mygithub (master)
$ ssh-keygen -t rsa -C"xqy_0077@163.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/qiuying/.ssh/id_rsa):
Created directory '/c/Users/qiuying/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/qiuying/.ssh/id_rsa.
Your public key has been saved in /c/Users/qiuying/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:SuJjnKF3mMYZ7Tos7i+9XyQ7WVHM9hvw5lbMpjjlYEY xqy_0077@163.com
The key's randomart image is:
+---[RSA 2048]----+
|         o.      |
|         .E      |
|        .o + o   |
|     .   .+ * =  |
|    + + So B *   |
|   = @ B  o *    |
|  .o& B .  o     |
|  o+++ o         |
| oo+++.          |
+----[SHA256]-----+


//git常用指令
Git基本常用命令如下：

　　mkdir：         XX (创建一个空目录 XX指目录名)

　　pwd：          显示当前目录的路径。

　　git init          把当前的目录变成可以管理的git仓库，生成隐藏.git文件。

　　git add XX       把xx文件添加到暂存区去。

　　git commit –m “XX”  提交文件 –m 后面的是注释。

　　git status        查看仓库状态

　　git diff  XX      查看XX文件修改了那些内容

　　git log          查看历史记录

　　git reset  --hard HEAD^ 或者 git reset  --hard HEAD~ 回退到上一个版本

　　(如果想回退到100个版本，使用git reset –hard HEAD~100 )

　　cat XX         查看XX文件内容

　　git reflog       查看历史记录的版本号id

　　git checkout -- XX  把XX文件在工作区的修改全部撤销。

　　git rm XX          删除XX文件

　　git remote add origin https://github.com/tugenhua0707/testgit 关联一个远程库

　　git push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库

　　git clone https://github.com/tugenhua0707/testgit  从远程库中克隆

　　git checkout –b dev  创建dev分支 并切换到dev分支上

　　git branch  查看当前所有的分支

　　git checkout master 切换回master分支

　　git merge dev    在当前的分支上合并dev分支

　　git branch –d dev 删除dev分支

　　git branch name  创建分支

　　git stash 把当前的工作隐藏起来 等以后恢复现场后继续工作

　　git stash list 查看所有被隐藏的文件列表

　　git stash apply 恢复被隐藏的文件，但是内容不删除

　　git stash drop 删除文件

　　git stash pop 恢复文件的同时 也删除文件

　　git remote 查看远程库的信息

　　git remote –v 查看远程库的详细信息

　　git push origin master  Git会把master分支推送到远程库对应的远程分支上

